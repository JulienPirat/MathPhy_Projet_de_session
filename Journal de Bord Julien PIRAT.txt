Phase 1 : 

j'ai repris le code exemple d'OpenGL qui est sur un GitHub, puis j'ai essayé de créer un autre projet C++ pour obtenir un projet de test qui sépare tout les projets de test pour obtenir un exemple.
Après plusieurs tests, j'ai finalement réussi à obtenir un projet avec un triangle en 2D.
Par la suite, j'ai réussi à ajouter ImGui au projet. Ensuite, j'ai voulu créer des objets GraphicEngine et ImGuiEngine comme expliqué en cours.
J'ai malheureusement eu énormément de problèmes à tout séparer.
La solution que j'ai trouvée a été de reprendre à zéro le projet en suivant les capsules vidéo du cours.

J'ai finalement réussi à avoir un projet de base fonctionnel avec 2 objets GraphicEngine et ImGuiEngine.

Problèmes rencontrés :
J'ai eu beaucoup de mal à configurer le projet avec les différentes bibliothèques et les éditeurs de liens à ajouter.

Sources :
Vidéos du cours
https://github.com/JoeyDeVries/LearnOpenGL
https://github.com/ocornut/imgui/tree/master

Phase 2 :

Ajout de la détection de l'interpénétration ainsi que le lien avec la resolution de contact.
Encore du travail sur la ground collision car la collision tremble.
Ajout de tests pour les démonstration et la visualisation des particules.

Phase 3 :

Ajout les force Generator pour le rigidBody.
Test/Démonstration des forces et de la rotation.
Trouver les limites de nos ressorts.
Aide Benjamin pour le bug de la fuite mémoire.

Problèmes rencontrés:
Bug sur les ressorts
Bug de fuite mémoire

Phase 4 :

Actuellement le projet est incomplet tous ce qui utilise un plane ne fonctionne pas.
La résolution de collision angulaire a quelques bug.

Création des primitives pour la narrow Phase.
Création de toutes les classes demandé pour la narrow Phase.
Réalisation du contact Resolver.
Réalisation du Générateur de contact avec chaques collisions.

Grosse sessions de débug ou j'ai du retoucher à tout sauf au KDTree que je n'ai pas codé.

Problèmes rencontrés:
Problème sur KDTree ce qui engendré un petit retard.
Beaucoup de temps à été utilisé pour la compréhension des algorithmes du cours ainsi que du livre pour avoir un résultat "passable".